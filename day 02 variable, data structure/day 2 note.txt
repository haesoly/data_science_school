2일차

markdown
markdown이란? like 주석
markdown입력 모드: m
코드입력 모드: y

출력결과 없애는 명령어 : o
shift+ tab :함수 도움말
n +tab -> 변수 찾기

1.633e8  =1.633 *10**8

함수 호출 type
1. len() : 주로 괄호 사이에 string, list
2. a.append() 문자열 a한테 ""해달라고 요청
.(으로 호출 방법은 특정 data type에만 가능?)

#변수

python 버전 2에서는 17/5 = 3으로 출력됨
3.4 출력하려면 한개이상을 실수로 만들어야함 17.0/5 =3.4
// : 몫만 출력하는 연산자

a[len(a)-1] = a string의 마지막 문자열 구하기
a[-1] =마지막 문자열 구하기
p  y   t  h  o  n
-6 -5 -4 -3 -2 -1

list /tuple/dictionary/set 정의

list: [ ]사용  #생성한 뒤에 값 추가할 수 있음
tuple: ( ) 사용 -#값 추가,변경,삭제 안됨
dictionary: { } 사용 #key를 이용해서 값을 넣고 뺌 (순서 NOT 중요)
set: { } 사용: #dictionary와의 차이:key 값 사용 X
                #list와의 차이: 순서 NOT 중요, 중복 허용 X

split ->문자열을 나누는 함수 
문자열.split() -> default: 띄어쓰기 단위로 나눔


**list 함수
append() - 리스트의 끝에 항목을 추가함           a.append(b)
extend() - 리스트 합치기 (+=로도 가능함)          a.extend(b)
insert() - 리스트의 원하는 위치에 추가 가능       a.insert(위치, 값)
remove() - 값으로 항목 삭제하기                    a.remove(1)  
               #처음만난것만 지움
pop() - 항목을 얻은 후, 삭제                          a.pop() -default: 마지막 원소 삭제 
index() - 값으로 인덱스를 찾을 수 있다              a.index(1,1,3)  -index(value,start,stop)

del - 인덱스로 아이템 삭제하기                     del a[-1]
in -리스트 내에 해당 값이 존재하는지 확인         value in [list] 
     (True or False 로 반환)                   
count() - 리스트 내에 해당 값이 얼마나 존재하는지 확인   years.count('2017')
join() -split()함수와 반대 작업을 함                     '/'.join(birth_date)
sort() - 리스트 자체를 내부적으로 정렬               a.sort()
sorted() - 리스트의 정렬된 복사본을 반환           b= sorted(a)
a[:] - 값을 복사
replace(a,b)- a 값을 b 로 대체                        string.replace(a,b)

tuple 생성하기
1. tuple = ('a',)
2. tuple = 'a',


dict1 = {'python' : 'best', 'java' : 'good', 'c++' : 'better'}

**dict 함수

생성후 값넣기
dict[i] = 1

update() - 두 딕셔너리르 병합함           dict1.update(dict2)
clear() - 딕셔너리의 모든 값을 초기화     a.clear()

in - key값 존재확인
get() - a.get('1')      #(a['1']와 같은말

형변환
int()
str()
list()
tuple()
dict()

